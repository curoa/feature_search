%!PS-Adobe-2.0 EPSF-2.0
%%Title: cas/image/count_all.eps
%%Creator: gnuplot 4.6 patchlevel 2
%%CreationDate: Wed Dec  4 15:57:15 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cas/image/count_all.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 2)
  /Author (sira)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Dec  4 15:57:15 2019)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
770 448 M
63 0 V
4371 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.86)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 1044 M
63 0 V
4371 0 R
-63 0 V
stroke
686 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.88)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 1640 M
63 0 V
4371 0 R
-63 0 V
stroke
686 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 2236 M
63 0 V
4371 0 R
-63 0 V
stroke
686 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.92)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 2831 M
63 0 V
4371 0 R
-63 0 V
stroke
686 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.94)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 3427 M
63 0 V
4371 0 R
-63 0 V
stroke
686 3427 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.96)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 4023 M
63 0 V
4371 0 R
-63 0 V
stroke
686 4023 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.98)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 4619 M
63 0 V
4371 0 R
-63 0 V
stroke
686 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 448 M
0 63 V
0 4108 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1263 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1263 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1755 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1755 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2248 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2248 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2741 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2741 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3233 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3233 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3726 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3726 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4219 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4219 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4711 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4711 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5204 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5204 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
770 4619 N
770 448 L
4434 0 V
0 4171 V
-4434 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (TSS mean)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
2987 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (#search node)]
] -46.7 MCshow
LTb
2987 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (CAS)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
2.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
6548 4549 M
[ [(Helvetica) 140.0 0.0 true true 0 (exact DFS)]
] -46.7 MRshow
LT0
1.00 0.00 0.00 C 6632 4549 M
399 0 V
770 4207 M
0 -3 V
5 -2 V
1 -120 V
0 -90 V
2 -6 V
2 -2 V
7 -7 V
8 -2 V
1 -8 V
6 -1 V
13 -8 V
3 -8 V
6 -28 V
14 -19 V
54 -1 V
8 -2 V
5 -3 V
9 -7 V
0 -16 V
2 -43 V
34 -18 V
47 -30 V
2 -14 V
0 -10 V
1 -82 V
3 -16 V
1 -55 V
3 -29 V
18 -87 V
7 -112 V
17 -5 V
12 -111 V
44 -9 V
0 -35 V
45 -141 V
6 -28 V
1 -71 V
5 -116 V
37 -9 V
128 -24 V
74 -42 V
328 -87 V
181 -35 V
41 -13 V
143 -50 V
268 -39 V
20 -42 V
114 -210 V
41 -50 V
8 -58 V
0 -257 V
39 -106 V
6 -164 V
25 -168 V
84 -44 V
814 -112 V
14 -60 V
9 -84 V
38 -127 V
426 -12 V
60 -23 V
0 -27 V
770 4207 BoxF
770 4204 BoxF
775 4202 BoxF
776 4082 BoxF
776 3992 BoxF
778 3986 BoxF
780 3984 BoxF
787 3977 BoxF
795 3975 BoxF
796 3967 BoxF
802 3966 BoxF
815 3958 BoxF
818 3950 BoxF
824 3922 BoxF
838 3903 BoxF
892 3902 BoxF
900 3900 BoxF
905 3897 BoxF
914 3890 BoxF
914 3874 BoxF
916 3831 BoxF
950 3813 BoxF
997 3783 BoxF
999 3769 BoxF
999 3759 BoxF
1000 3677 BoxF
1003 3661 BoxF
1004 3606 BoxF
1007 3577 BoxF
1025 3490 BoxF
1032 3378 BoxF
1049 3373 BoxF
1061 3262 BoxF
1105 3253 BoxF
1105 3218 BoxF
1150 3077 BoxF
1156 3049 BoxF
1157 2978 BoxF
1162 2862 BoxF
1199 2853 BoxF
1327 2829 BoxF
1401 2787 BoxF
1729 2700 BoxF
1910 2665 BoxF
1951 2652 BoxF
2094 2602 BoxF
2362 2563 BoxF
2382 2521 BoxF
2496 2311 BoxF
2537 2261 BoxF
2545 2203 BoxF
2545 1946 BoxF
2584 1840 BoxF
2590 1676 BoxF
2615 1508 BoxF
2699 1464 BoxF
3513 1352 BoxF
3527 1292 BoxF
3536 1208 BoxF
3574 1081 BoxF
4000 1069 BoxF
4060 1046 BoxF
4060 1019 BoxF
6831 4549 BoxF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT1
1.00 0.00 0.00 C LCb setrgbcolor
6548 4409 M
[ [(Helvetica) 140.0 0.0 true true 0 (exact BFS)]
] -46.7 MRshow
LT1
1.00 0.00 0.00 C 6632 4409 M
399 0 V
770 4207 M
0 -1290 V
1 -777 V
0 -582 V
249 -65 V
2 -95 V
46 -200 V
31 -74 V
1 -23 V
117 -10 V
78 -28 V
180 -17 V
0 -15 V
85 -12 V
770 4207 TriUF
770 2917 TriUF
771 2140 TriUF
771 1558 TriUF
1020 1493 TriUF
1022 1398 TriUF
1068 1198 TriUF
1099 1124 TriUF
1100 1101 TriUF
1217 1091 TriUF
1295 1063 TriUF
1475 1046 TriUF
1475 1031 TriUF
1560 1019 TriUF
6831 4409 TriUF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LT2
0.00 0.00 1.00 C LCb setrgbcolor
6548 4269 M
[ [(Helvetica) 140.0 0.0 true true 0 (bandit DAG:1)]
] -46.7 MRshow
LT2
0.00 0.00 1.00 C 6632 4269 M
399 0 V
770 4207 M
0 -1290 V
1 -777 V
1 -582 V
1870 1255 L
0 -128 V
246 -47 V
129 -45 V
770 4207 BoxF
770 2917 BoxF
771 2140 BoxF
772 1558 BoxF
1870 1255 BoxF
1870 1127 BoxF
2116 1080 BoxF
2245 1035 BoxF
6831 4269 BoxF
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LT3
0.00 0.00 1.00 C LCb setrgbcolor
6548 4129 M
[ [(Helvetica) 140.0 0.0 true true 0 (bandit DAG:10)]
] -46.7 MRshow
LT3
0.00 0.00 1.00 C 6632 4129 M
399 0 V
770 4207 M
0 -1290 V
1 -777 V
1 -582 V
665 -258 V
41 -100 V
445 -92 V
32 -20 V
966 -68 V
4884 999 L
770 4207 TriUF
770 2917 TriUF
771 2140 TriUF
772 1558 TriUF
1437 1300 TriUF
1478 1200 TriUF
1923 1108 TriUF
1955 1088 TriUF
2921 1020 TriUF
4884 999 TriUF
6831 4129 TriUF
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LT4
0.00 1.00 0.00 C LCb setrgbcolor
6548 3989 M
[ [(Helvetica) 140.0 0.0 true true 0 (bandit TREE:1)]
] -46.7 MRshow
LT4
0.00 1.00 0.00 C 6632 3989 M
399 0 V
770 4207 M
0 -1290 V
1 -777 V
1 -582 V
997 1289 L
0 -121 V
1 -31 V
1 -29 V
81 -12 V
23 -19 V
2 -1 V
33 -7 V
35 -23 V
2 -27 V
770 4207 BoxF
770 2917 BoxF
771 2140 BoxF
772 1558 BoxF
997 1289 BoxF
997 1168 BoxF
998 1137 BoxF
999 1108 BoxF
1080 1096 BoxF
1103 1077 BoxF
1105 1076 BoxF
1138 1069 BoxF
1173 1046 BoxF
1175 1019 BoxF
6831 3989 BoxF
% End plot #5
% Begin plot #6
1.000 UP
2.000 UL
LT5
0.00 1.00 0.00 C LCb setrgbcolor
6548 3849 M
[ [(Helvetica) 140.0 0.0 true true 0 (bandit TREE:10)]
] -46.7 MRshow
LT5
0.00 1.00 0.00 C 6632 3849 M
399 0 V
770 4207 M
0 -1290 V
1 -777 V
1 -582 V
28 -393 V
114 -74 V
345 -14 V
0 -1 V
58 -7 V
6 -23 V
1 -27 V
770 4207 TriUF
770 2917 TriUF
771 2140 TriUF
772 1558 TriUF
800 1165 TriUF
914 1091 TriUF
1259 1077 TriUF
1259 1076 TriUF
1317 1069 TriUF
1323 1046 TriUF
1324 1019 TriUF
6831 3849 TriUF
% End plot #6
1.000 UL
LTb
LCb setrgbcolor
770 4619 N
770 448 L
4434 0 V
0 4171 V
-4434 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
